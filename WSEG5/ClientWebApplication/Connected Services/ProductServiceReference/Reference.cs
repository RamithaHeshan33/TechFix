//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientWebApplication.ProductServiceReference {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductServiceReference.ProductServiceSoap")]
    public interface ProductServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProducts", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProducts", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProductsByUsername", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetProductsByUsername(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProductsByUsername", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetProductsByUsernameAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProductNames", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetProductNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProductNames", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetProductNamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddProduct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AddProduct(string productName, decimal productPrice, int productQty, string productDesc, string productImage, string username, string categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddProduct", ReplyAction="*")]
        System.Threading.Tasks.Task<string> AddProductAsync(string productName, decimal productPrice, int productQty, string productDesc, string productImage, string username, string categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSupplierNames", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSupplierNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSupplierNames", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSupplierNamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCategoryNames", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetCategoryNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCategoryNames", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCategoryNamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProduct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void UpdateProduct(int productID, string productName, decimal productPrice, int productQty, string productDesc, string productImage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProduct", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateProductAsync(int productID, string productName, decimal productPrice, int productQty, string productDesc, string productImage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteProduct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DeleteProduct(int productID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteProduct", ReplyAction="*")]
        System.Threading.Tasks.Task DeleteProductAsync(int productID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddToCart", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AddToCart(int productID, string username, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddToCart", ReplyAction="*")]
        System.Threading.Tasks.Task<string> AddToCartAsync(int productID, string username, int quantity);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ProductServiceSoapChannel : ClientWebApplication.ProductServiceReference.ProductServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductServiceSoapClient : System.ServiceModel.ClientBase<ClientWebApplication.ProductServiceReference.ProductServiceSoap>, ClientWebApplication.ProductServiceReference.ProductServiceSoap {
        
        public ProductServiceSoapClient() {
        }
        
        public ProductServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetProducts() {
            return base.Channel.GetProducts();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetProductsAsync() {
            return base.Channel.GetProductsAsync();
        }
        
        public System.Data.DataTable GetProductsByUsername(string username) {
            return base.Channel.GetProductsByUsername(username);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetProductsByUsernameAsync(string username) {
            return base.Channel.GetProductsByUsernameAsync(username);
        }
        
        public System.Data.DataSet GetProductNames() {
            return base.Channel.GetProductNames();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetProductNamesAsync() {
            return base.Channel.GetProductNamesAsync();
        }
        
        public string AddProduct(string productName, decimal productPrice, int productQty, string productDesc, string productImage, string username, string categoryId) {
            return base.Channel.AddProduct(productName, productPrice, productQty, productDesc, productImage, username, categoryId);
        }
        
        public System.Threading.Tasks.Task<string> AddProductAsync(string productName, decimal productPrice, int productQty, string productDesc, string productImage, string username, string categoryId) {
            return base.Channel.AddProductAsync(productName, productPrice, productQty, productDesc, productImage, username, categoryId);
        }
        
        public System.Data.DataSet GetSupplierNames() {
            return base.Channel.GetSupplierNames();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSupplierNamesAsync() {
            return base.Channel.GetSupplierNamesAsync();
        }
        
        public System.Data.DataSet GetCategoryNames() {
            return base.Channel.GetCategoryNames();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCategoryNamesAsync() {
            return base.Channel.GetCategoryNamesAsync();
        }
        
        public void UpdateProduct(int productID, string productName, decimal productPrice, int productQty, string productDesc, string productImage) {
            base.Channel.UpdateProduct(productID, productName, productPrice, productQty, productDesc, productImage);
        }
        
        public System.Threading.Tasks.Task UpdateProductAsync(int productID, string productName, decimal productPrice, int productQty, string productDesc, string productImage) {
            return base.Channel.UpdateProductAsync(productID, productName, productPrice, productQty, productDesc, productImage);
        }
        
        public void DeleteProduct(int productID) {
            base.Channel.DeleteProduct(productID);
        }
        
        public System.Threading.Tasks.Task DeleteProductAsync(int productID) {
            return base.Channel.DeleteProductAsync(productID);
        }
        
        public string AddToCart(int productID, string username, int quantity) {
            return base.Channel.AddToCart(productID, username, quantity);
        }
        
        public System.Threading.Tasks.Task<string> AddToCartAsync(int productID, string username, int quantity) {
            return base.Channel.AddToCartAsync(productID, username, quantity);
        }
    }
}
